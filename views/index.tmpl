<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PleFi</title>
    <style>
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f7f7f9;
            color: #2d3436;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
        }
        .container {
            text-align: center;
            padding: 3rem;
            border-radius: 12px;
            background-color: #ffffff;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);
            max-width: 800px;
            width: 90%;
        }
        h1 {
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            color: #2d3436;
            letter-spacing: -0.02em;
        }
        p {
            font-size: 1.1rem;
            margin-bottom: 2rem;
            color: #636e72;
            line-height: 1.6;
        }
        .logo-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 2rem;
        }
        .logo {
            max-width: 180px;
        }
        .subtitle {
            display: inline-block;
            padding: 0.5rem 1.5rem;
            background-color: #f1f2f6;
            border-radius: 50px;
            color: #636e72;
            font-weight: 600;
            margin-bottom: 2.5rem;
            font-size: 0.95rem;
            letter-spacing: 0.02em;
        }
        .checkout-btn {
            background-color: #4b6bfb;
            color: #ffffff;
            border: none;
            padding: 0.9rem 2rem;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 4px 12px rgba(75, 107, 251, 0.15);
            margin-right: 1rem;
            text-decoration: none;
            display: inline-block;
        }
        .checkout-btn:hover {
            background-color: #3557fa;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(75, 107, 251, 0.25);
        }
        .logout-btn {
            background-color: transparent;
            color: #868e96;
            border: none;
            padding: 0.5rem 0.75rem;
            border-radius: 4px;
            font-size: 0.85rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-top: 2rem;
            text-decoration: underline;
        }
        .logout-btn:hover {
            color: #495057;
            background-color: #f1f3f5;
        }
        .cancel-btn {
            background-color: #ff7675;
            color: #ffffff;
            border: none;
            padding: 0.8rem 1.8rem;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 4px 12px rgba(255, 118, 117, 0.15);
            margin-top: 1rem;
        }
        .cancel-btn:hover {
            background-color: #ff6b6b;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(255, 118, 117, 0.25);
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
            backdrop-filter: blur(4px);
        }
        .modal-content {
            background-color: #ffffff;
            margin: 15% auto;
            padding: 2.5rem;
            border-radius: 12px;
            width: 80%;
            max-width: 480px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        .modal-content h2 {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: #2d3436;
        }
        .modal-content p {
            color: #636e72;
            margin-bottom: 0.75rem;
        }
        .modal-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 2rem;
        }
        .confirm-btn {
            background-color: #ff7675;
            color: #ffffff;
            border: none;
            padding: 0.8rem 1.8rem;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .confirm-btn:hover {
            background-color: #ff6b6b;
        }
        .cancel-modal-btn {
            background-color: #e9ecef;
            color: #495057;
            border: none;
            padding: 0.8rem 1.8rem;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .cancel-modal-btn:hover {
            background-color: #dee2e6;
        }
        .status-message {
            margin-top: 1.5rem;
            padding: 0.75rem 1.25rem;
            border-radius: 8px;
            display: none;
            font-weight: 500;
        }
        .success {
            background-color: #e3f9e5;
            color: #2b8a3e;
        }
        .error {
            background-color: #fff5f5;
            color: #e03131;
        }
        .button-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.75rem;
        }
        .greeting {
            margin-bottom: 2rem;
        }
        @media (max-width: 640px) {
            .container {
                padding: 2rem;
                width: 85%;
            }
            h1 {
                font-size: 2.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        {{ if .IsAuthenticated }}
            <div class="greeting">
                <h1>Hello, {{ .UserInfo.Username }}!</h1>
            </div>
        {{ else }}
            <h1>PleFi</h1>
            <div class="subtitle">Plex seamless subscription management</div>
        {{ end }}
        <div class="button-container">
            {{ if .IsAuthenticated }}
                <a href="/subscriptions" class="checkout-btn">Manage Subscriptions</a>
            {{ else }}
                <button class="checkout-btn" onclick="window.location.href='/stripe/checkout?price_id={{ .PriceID }}'">Sign in to Subscribe</button>
            {{ end }}
        </div>
        
        {{ if .IsAuthenticated }}
        <button id="logoutButton" class="logout-btn">Sign out</button>
        {{ end }}
    </div>
    
    <!-- Confirmation Modal -->
    <div id="confirmationModal" class="modal">
        <div class="modal-content">
            <h2>Cancel Subscription</h2>
            <p>Are you sure you want to cancel your subscription?</p>
            <p>Your subscription will remain active until the end of the current billing cycle.</p>
            <div class="modal-buttons">
                <button id="confirmCancel" class="confirm-btn">Yes, Cancel</button>
                <button id="cancelModal" class="cancel-modal-btn">No, Keep Subscription</button>
            </div>
        </div>
    </div>

    <script>
        // Get modal elements
        const modal = document.getElementById('confirmationModal');
        const cancelBtn = document.getElementById('cancelSubscription');
        const confirmBtn = document.getElementById('confirmCancel');
        const closeModalBtn = document.getElementById('cancelModal');
        const statusMessage = document.getElementById('statusMessage');
        const logoutButton = document.getElementById('logoutButton');

        // Handle logout via JavaScript
        if (logoutButton) {
            logoutButton.addEventListener('click', async function() {
                try {
                    const response = await fetch('/logout', {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json',
                        },
                        credentials: 'same-origin'
                    });
                    
                    if (response.ok) {
                        // Reload the page to reflect logged out state
                        window.location.reload();
                    } else {
                        console.error('Logout failed:', response.status);
                        // Fallback to direct navigation if the API call fails
                        window.location.href = '/logout';
                    }
                } catch (error) {
                    console.error('Logout error:', error);
                    // Fallback to direct navigation if there's an error
                    window.location.href = '/logout';
                }
            });
        }

        // Show modal when cancel button is clicked
        if (cancelBtn) {
            cancelBtn.addEventListener('click', function() {
                modal.style.display = 'block';
            });
        }

        // Hide modal when close button is clicked
        if (closeModalBtn) {
            closeModalBtn.addEventListener('click', function() {
                modal.style.display = 'none';
            });
        }

        // Hide modal when clicking outside of it
        window.addEventListener('click', function(event) {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });

        // Handle subscription cancellation
        if (confirmBtn) {
            confirmBtn.addEventListener('click', async function() {
                try {
                    const response = await fetch('/stripe/cancel-subscription', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        statusMessage.textContent = result.message;
                        statusMessage.className = 'status-message success';
                    } else {
                        statusMessage.textContent = result.error || 'Failed to cancel subscription';
                        statusMessage.className = 'status-message error';
                    }
                } catch (error) {
                    statusMessage.textContent = 'An error occurred while processing your request';
                    statusMessage.className = 'status-message error';
                }
                
                statusMessage.style.display = 'block';
                modal.style.display = 'none';
            });
        }
    </script>
</body>
</html>
